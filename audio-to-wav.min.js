"use strict";
// github: https://github.com/ewwink/AudioToWAV
class AudioToWAV{constructor(a){this.anchor=document.querySelector("#downloadLink"),this.anchor||(this.anchor=document.createElement("a"),this.anchor.id="downloadLink",this.anchor.style="display: none",document.body.appendChild(this.anchor)),this.fileInput=a,this.wavBlob=null,this.sampleRate=24e3}convert(){return new Promise(a=>{let b=new AudioContext,c=new FileReader,d=this;c.onload=function(c){b.decodeAudioData(c.target.result).then(function(b){let c=new OfflineAudioContext({numberOfChannels:1,length:d.sampleRate*b.duration,sampleRate:d.sampleRate}),e=c.createBufferSource();e.buffer=b,e.connect(c.destination);let f=new FileReader;f.onload=function(){c.startRendering().then(function(b){d.wavBlob=d.bufferToWave(b,c.length),a(d.wavBlob)}).catch(function(a){throw console.log("convert error: ",a),"error"})},f.readAsArrayBuffer(d.fileInput),e.start(0)})},c.readAsArrayBuffer(d.fileInput)})}setSampleRate(a){this.sampleRate=a}async download(){this.wavBlob||(await this.convert());let a=URL.createObjectURL(this.wavBlob),b=this.generateFileName();this.anchor.href=a,this.anchor.download=b,this.anchor.click(),window.URL.revokeObjectURL(a)}generateFileName(){let a=this.fileInput.name,b=a.lastIndexOf("."),c=a.slice(0,b);return c+".compressed.wav"}bufferToWave(a,b){function c(a){k.setUint16(n,a,!0),n+=2}function d(a){k.setUint32(n,a,!0),n+=4}let e,f,g=a.numberOfChannels,h=2*(b*g)+44,j=new ArrayBuffer(h),k=new DataView(j),l=[],m=0,n=0;for(d(1179011410),d(h-8),d(1163280727),d(544501094),d(16),c(1),c(g),d(a.sampleRate),d(2*a.sampleRate*g),c(2*g),c(16),d(1635017060),d(h-n-4),e=0;e<a.numberOfChannels;e++)l.push(a.getChannelData(e));for(;n<h;){for(e=0;e<g;e++)f=Math.max(-1,Math.min(1,l[e][m])),f=0|(0>.5+f?32768*f:32767*f),k.setInt16(n,f,!0),n+=2;m++}return new Blob([j],{type:"audio/wav"})}}
